{"version":3,"sources":["styles/ThemeProvider.ts","components/ThemeToggler.tsx","data/NavBar.ts","docs/profile.png","docs/resume.pdf","components/NavItem.tsx","components/NavBar.tsx","components/Home.tsx","data/Projects.ts","data/Projects_tools.ts","components/Tool.tsx","components/Project.tsx","components/Projects.tsx","components/Work.tsx","components/Interests.tsx","App.tsx","index.tsx"],"names":["themes","saveTheme","theme","localStorage","setItem","getTheme","getItem","DARK","toggleTheme","setTheme","LIGHT","ThemeToggler","pathnames","className","onClick","navbar","initials","name","link","home","work","interests","resume","path_detector_initializer","isHome","isWork","isInterests","isResume","NavItem","animation","toggleSideNav","isLocation","useState","currentPath","setCurrentPath","useEffect","href","target","rel","to","expanded","shrunk","hide_side_nav","Navbar","navState","setNavState","sideBarState","setSideBarSate","path_detector","setPathDetector","location","useLocation","pathname","SLASH","WORK","INTERESTS","RESUME","updatePathDetector","shrink","expand","src","alt","Home","categories","url","fgColor","bgColor","cards_cast_tools","color","colors","HTML","CSS","JavaScript","lm_video_tour_tools","trace_c19_tools","Java","projects","id","description","source","undefined","demo","tools","category","PERSONAL","TEAM","Tool","text_color","setTextColor","TypeScript","handleColorBlinding","style","borderRadius","padding","backgroundColor","Project","sourceAvailable","demoAvailable","tools_used","map","tool","data-label","Projects","project_list","project","Work","Interests","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f57bb2f.chunk.js","sourcesContent":["/******************\n * Manages Themes\n */\n\n// Available Themes\nenum themes {\n  LIGHT = 'light',\n  DARK = 'dark'\n}\n\n// Saves the current theme to local storage\nconst saveTheme = (theme:string): void => {\n    localStorage.setItem(\"theme\", theme);\n}\n\n// Gets the current theme from local storage\nconst getTheme = (): string => {\n    const theme: string | null = localStorage.getItem(\"theme\");\n    return theme === null ? themes.DARK : theme;\n}   \n\n// Theme Toggler\nconst toggleTheme = (theme: string, setTheme: Function): void => {\n    if(theme === themes.DARK){\n        setTheme(themes.LIGHT);\n        saveTheme(themes.LIGHT);\n    }else{\n        setTheme(themes.DARK)\n        saveTheme(themes.DARK);\n    }\n}\n\nexport {\n    themes,\n    toggleTheme,\n    getTheme\n}","import  React from \"react\"\nimport {MdBrightness4, MdBrightness5} from 'react-icons/md'\nimport {ThemeInfo} from '../interfaces/NavBar.i'\nimport {toggleTheme, themes} from '../styles/ThemeProvider'\n\n\nfunction ThemeToggler({theme, setTheme}: ThemeInfo){\n    return theme === themes.LIGHT ?  \n    <MdBrightness4 className=\"pointer moon\" onClick={() => toggleTheme(theme, setTheme)} /> : \n    <MdBrightness5 className=\"pointer sun\" onClick={() => toggleTheme(theme, setTheme)} />\n}\n\nexport default ThemeToggler;","import { NavBarInfo, PathDetector } from '../interfaces/NavBar.i'\nimport homepageImage from '../docs/profile.png'\n\n\nexport const navbar: NavBarInfo = {\n    initials : {\n        name:\"BO\",\n        link: homepageImage\n    },\n    home: {\n        name: \"Home\",\n        link: \"/\"\n    },\n    work: {\n        name : \"Work\",\n        link: \"/work\"\n    },\n    interests : {\n        name: \"Interests\",\n        link: \"/interests\"\n    },\n    resume : {\n        name: \"Resume\",\n        link: \"/resume\"\n    }  \n}\n\n// Represents all the possible pathnames \nexport enum pathnames{\n     SLASH = \"/\",\n     HOME = \"/benjaminombeni.com\",\n     WORK = \"/work\",\n     INTERESTS = \"/interests\",\n     RESUME = \"/resume\"\n }\n\n // Below are the valid state for that can be held in the path detector\n export const path_detector_initializer: PathDetector = {\n     isHome: false, \n     isWork:false, \n     isInterests: false, \n     isResume: false\n}\n\n export const isHome: PathDetector = {\n     isHome: true, \n     isWork:false, \n     isInterests: false, \n     isResume: false\n }\n\n export const isWork: PathDetector = {\n     isHome: false, \n     isWork:true, \n     isInterests: false, \n     isResume: false\n }\n\n export const isInterests: PathDetector = {\n     isHome: false, \n     isWork:false, \n     isInterests: true, \n     isResume: false\n }\n\n export const isResume: PathDetector = {\n     isHome: true, \n     isWork:false, \n     isInterests: false, \n     isResume: false\n }\n\n\n\n","export default __webpack_public_path__ + \"static/media/profile.bc7d6ff5.png\";","export default __webpack_public_path__ + \"static/media/resume.84272521.pdf\";","import React, {useState, useEffect} from 'react';\nimport { Link }from 'react-router-dom';\nimport '../styles/styles.scss';\nimport { navbar } from '../data/NavBar';\nimport resume from '../docs/resume.pdf';\n\n// Alternative solution for NavItemInfo\n// TODO: Figure out a way to use the NavItemInfo interface instead.\ninterface NavItemInfoWithAnimation{\n    name: string,\n    link: string,\n    animation: Function,\n    toggleSideNav: Function,\n    isLocation: boolean\n}\n\nfunction NavItem({name, link, animation, toggleSideNav, isLocation}: NavItemInfoWithAnimation){\n    const [currentPath, setCurrentPath] = useState(\"\");\n    useEffect(() => {\n        if(isLocation){\n            setCurrentPath(\"current-path\");\n            animation();\n        }else{\n            setCurrentPath(\"\");\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isLocation])\n\n    // Renders the resume pdf \n    if(name === navbar.resume.name){\n        return (\n            <div className=\"nav-item\">\n                <a href={resume} target=\"_blank\" rel=\"noreferrer\"  className={`pointer bottom-border-onhover ${currentPath}`}>{name}</a>\n            </div> \n        )\n    }\n\n    // Renders the nav item path\n    return (\n        <Link to={link} onClick={() => toggleSideNav()}>\n            <div className={`nav-item bottom-border-onhover ${currentPath}`}>\n                <div className={\"pointer \"}>{name}</div>\n            </div>\n        </Link>\n    )  \n}\n\nexport default NavItem;\n\n","import React, {useState, useEffect} from \"react\";\nimport ThemeToggler from \"./ThemeToggler\";\nimport {\n    navbar, pathnames, \n    path_detector_initializer,\n    isHome,\n    isWork,\n    isInterests,\n    isResume\n} from \"../data/NavBar\";\nimport NavItem from \"./NavItem\";\nimport { ThemeInfo, PathDetector } from  \"../interfaces/NavBar.i\";\nimport { MdDehaze } from \"react-icons/md\";\nimport { useLocation } from \"react-router-dom\";\n\nconst expanded = \"navigation-bar-expanded\" // Represents the CSS class containing the animation that expands the navigation bar.\nconst shrunk = \"navigation-bar-shrunk\"     // Represents the CSS class containing the animation that shrinks the navigation bar.\nconst show_side_nav = \"show-side-nav\"      // Represents the CSS class containing the animation that slides the sidebar in from the left.\nconst hide_side_nav = \"hide-side-nav\"      // Represents the CSS class containing the animation that slides the sidebar out to the left.\nconst hidden = \"hidden\"\n\nfunction Navbar({theme, setTheme}: ThemeInfo){\n    const [navState, setNavState] = useState<string>(expanded)               // Controls the state of the navbar on all screens.\n    const [sideBarState, setSideBarSate] = useState<string>(hidden)   // Controls the state of the sidenav on small screens only.\n    const [path_detector, setPathDetector] = useState<PathDetector>(path_detector_initializer)\n    const location = useLocation();\n\n    useEffect(() => {\n        const updatePathDetector = () => {\n            switch (location.pathname) {\n                case pathnames.SLASH:\n                    setPathDetector(isHome);\n                    break;\n                case pathnames.WORK:\n                    setPathDetector(isWork);\n                    break;\n                case pathnames.INTERESTS:\n                    setPathDetector(isInterests);\n                    break;\n                case pathnames.RESUME:\n                    setPathDetector(isResume);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        updatePathDetector();\n    }, [location]);\n   \n    // Changes the state of the navigation bar from expanded to shrunk. \n    const shrink = ():void => {\n        if(navState === shrunk){\n            return;\n        }else{\n            setNavState(shrunk)\n        }\n    }\n\n    // Changes the state of the navigation bar from shrunk to expanded.\n    const expand = ():void => {\n        if(navState === expanded){\n            return\n        }else{\n            setNavState(expanded)\n        }\n    }\n\n    // Toggles the sidebar from visible to invisible and vice versa\n    const toggleSideNav = ():void => {\n        if(sideBarState === hide_side_nav){\n            setSideBarSate(show_side_nav)\n        }else{\n            setSideBarSate(hide_side_nav)\n        }\n    }\n\n    // Renders Benjamin's portrait as an image.\n    const portrait = (link: string) : JSX.Element => {\n        return  <img className=\"portrait\" src={link} alt=\"Benjamin's Portrait\" />\n    }\n\n    // Renders Benjamin's initials\n    const initials = (name: string): JSX.Element => {\n        return <h2>{name}</h2>\n    }\n\n    return(\n        <div className={`${navState}`}>\n            <div>\n                {navState === expanded && portrait(navbar.initials.link)}\n                {navState === shrunk && initials(navbar.initials.name)}\n            </div>\n            <div className=\"flex-space-between\">\n                <MdDehaze className=\"hamberger pointer\" onClick={toggleSideNav} />\n                <div className={`nav-items ${sideBarState}`}>\n                    <div className=\"close_navbar pointer\" onClick={toggleSideNav}>x</div>\n                    <NavItem name={navbar.home.name} link={navbar.home.link} animation={expand} toggleSideNav={toggleSideNav} isLocation={path_detector.isHome} />\n                    <NavItem name={navbar.work.name} link={navbar.work.link} animation={shrink} toggleSideNav={toggleSideNav} isLocation={path_detector.isWork} />\n                    <NavItem name={navbar.interests.name} link={navbar.interests.link} animation={shrink} toggleSideNav={toggleSideNav} isLocation={path_detector.isInterests} />\n                    <NavItem name={navbar.resume.name} link={navbar.resume.link} animation={expand} toggleSideNav={toggleSideNav} isLocation={path_detector.isResume} /> \n                </div>\n                <div className=\"theme-toggler\">\n                    <ThemeToggler theme={theme} setTheme={setTheme} />\n                </div>\n            </div> \n        </div>\n    )\n}\n\nexport default Navbar","import React from 'react';\nimport { SocialIcon } from 'react-social-icons';\nimport { navbar } from '../data/NavBar';\nimport { Link } from 'react-router-dom';\n\nfunction Home(): JSX.Element {\n    return (\n        <div className='home-wrapper'>\n            <div className=\"home-about-wrapper flex-center flex-1\">\n                <div className=\"home-about\">\n                    <h1>Benjamin Ombeni</h1>\n                    <h3>Software Engineering Student</h3>\n                    <h3><a className=\"bottom-border-onhover\" href=\"https://www.csusm.edu/\">CSUSM</a> 2022</h3>\n                    <br />\n                    <SocialIcon url=\"https://www.linkedin.com/in/benmob/\" fgColor=\"#ffffff\" className=\"media-icon\"/>\n                    <SocialIcon url=\"https://github.com/BenMob\" bgColor=\"#000000\" fgColor=\"#ffffff\" className=\"media-icon\" />\n                </div>\n            </div>\n            <div className=\"flex-center flex-1\" >\n                <Link to={navbar.work.link} >\n                    <div className=\"laptop pointer\" >&#128187;</div>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import { Project_i } from '../interfaces/Project.i'\nimport { cards_cast_tools, lm_video_tour_tools, trace_c19_tools } from \"./Projects_tools\"\n\nenum categories {\n    PERSONAL = \"Personal\",\n    TEAM = \"Team\"\n}\n\n\n\nconst projects : Array<Project_i> = [\n    {\n        id: 1,\n        name:\"Card-Cast\",\n        description: \"I plan to make this a web platform that host some of the most popular card games, games ranging from Card-Flips to Crazy-8 and more. To me, building card games is a great and fun way to practice some problem solving.\",\n        source: undefined,\n        demo: undefined,\n        tools: cards_cast_tools,\n        category: categories.PERSONAL\n    },\n    {\n        id: 2,\n        name:\"LM-Video-Tour\",\n        description: \"A Mobile Application that allows users to go on virtual housing tours. My teammates and I worked on this application using React Native as part the Fab Friday Hackathon at our University back in Fall 2020\",\n        source: 'https://github.com/amulyaparmar/tour.video-team1',\n        demo: undefined,\n        tools: lm_video_tour_tools,\n        category: categories.TEAM\n    },\n    {\n        id: 3,\n        name:\"Trace-C19\",\n        description: \"A Web Application that allows a community led contact tacing for the coronavirus. Trace-C19 utilizes the Google Maps API and Google's Datastore. My teammates and I worked on this application for 3 weeks as part of Google's Software Product Sprint Program back in Summer 2020.\",\n        source: \"https://github.com/BenMob/trace-c19\",\n        demo: undefined,\n        tools: trace_c19_tools,\n        category: categories.TEAM\n    },\n    {\n        id: 4,\n        name:\"Cougar Roumie\",\n        description: \"A Web Application designed to help College Students find potential roommates based on interests. My team and I built this application as part of our Introductory Software Engineering Course back in Spring 2019\",\n        source: \"https://github.com/BenMob/cougar-roumie\",\n        demo: \"http://cougarroomie.tech/\",\n        tools: trace_c19_tools,\n        category: categories.TEAM\n    },\n    \n]\n\nexport default projects;","/**\n * This file has the list of tools used to build each project\n */\n\nimport colors from '../data/tools_colors.json'\n\nexport const cards_cast_tools = [\n    {\n        name: \"HTML\",\n        color: colors.HTML\n    },\n    {\n        name: \"CSS\",\n        color: colors.CSS\n    },\n    {\n        name: \"JavaScript\",\n        color: colors.JavaScript\n    }\n]\n\nexport const lm_video_tour_tools = [\n    {\n        name: \"JavaScript\",\n        color: colors.JavaScript\n    }\n]\n\nexport const trace_c19_tools = [\n    {\n        name: \"HTML\",\n        color: colors.HTML\n    },\n    {\n        name: \"CSS\",\n        color: colors.CSS,\n    },\n    {\n        name: \"JavaScript\",\n        color: colors.JavaScript\n    },\n    {\n        name: \"Java\",\n        color: colors.Java\n    }\n]","import React, { useState, useEffect } from 'react'\nimport { Tool_i } from '../interfaces/Project.i'\nimport colors from '../data/tools_colors.json'\n\n/**\n * Component that defines represents each tool/programming language on the Projects page.\n * @param param0 \n */\nfunction Tool({name, color}: Tool_i): JSX.Element{\n\n    // Tool text color\n    const [text_color, setTextColor] = useState(\"\");\n\n\n    useEffect(() => {\n         // Makes sure bright/dark colors don't blind in with the text\n        const handleColorBlinding = (): void => {\n            switch (color) {\n                case colors.JavaScript:\n                    setTextColor(\"#000000\")\n                    break;\n\n                case colors.TypeScript:\n                case colors.CSS:\n                    setTextColor(\"#f7f7f7\")\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        // Call the handleColorBlinding right when the components mounts\n        handleColorBlinding()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const style = {\n        color : `${text_color}`,\n        borderRadius: '2px',\n        padding: '2px',\n        backgroundColor: `${color}`\n    }\n\n    return(\n        <div className=\"project-tool\" style={style}><strong>{name}</strong></div>\n    )\n}\n\nexport default Tool;","import React, {useState} from \"react\";\nimport { Project_i } from \"../interfaces/Project.i\";\nimport { MdLink, MdCode } from \"react-icons/md\";\nimport Tool from './Tool'\n\nfunction Project({id, name, description, source, demo, tools, category}: Project_i): JSX.Element {\n    \n    // eslint-disable-next-line\n    const [sourceAvailable, setSourceAvailable] = useState<boolean | undefined>(typeof source === typeof \"string\");\n    // eslint-disable-next-line\n    const [demoAvailable, setDemoAvailable] = useState<boolean | undefined>(typeof demo === typeof \"string\");\n    \n    // Renders the link to the source code of the project.\n    const renderSource = (): JSX.Element => {\n        return <a href={source}><div className=\"project-link-icon\" data-label=\"Source\"><MdCode /></div></a>\n    }\n\n    // Renders the link to the demo/live version of the project.\n    const renderDemo = (): JSX.Element => {\n        return <a href={source}><div className=\"project-link-icon\" data-label=\"Live\"><MdLink /></div></a>\n    }\n\n    // Create Tool components\n    const tools_used = tools?.map(tool => {\n        return <Tool name={tool.name} color={tool.color}/>\n    })\n\n    return(\n        <div className=\"project-container\">\n            <div className=\"project-header\">\n                 <h3>{name}</h3>\n            </div>\n            <div className=\"project-description\">\n                <small>{description}</small>\n            </div>\n            <div className=\"project-links\">\n                {sourceAvailable && renderSource()}\n                {demoAvailable && renderDemo()}\n            </div>\n            <div className=\"project-tools wrap\">\n               {tools_used}\n            </div>\n            <div className=\"category\">\n                <small>{category} Project</small>\n            </div>\n        </div>\n    )\n}\n\nexport default Project;","import React from \"react\"\nimport projects from \"../data/Projects\"\nimport Project from \"./Project\"\n\nfunction Projects(): JSX.Element {\n    const project_list = projects.map(project => {\n        return(\n            <Project \n                key={project.id}\n                id={project.id}\n                name={project.name}\n                description={project.description}\n                source={project.source}\n                demo={project.demo}\n                category={project.category}\n                tools={project.tools}\n            />\n        ) \n    })\n\n    return (\n        <div className=\"projects-wrapper\">\n            <div className=\"flex-center-width\"><h2>Projects</h2></div>\n            <div className=\"project-list\">{project_list}</div>\n        </div>\n    )\n}\n\nexport default Projects;\n","import React from 'react'\nimport Projects from './Projects'\n\nfunction Work() {\n    return (\n        <div className='section-wrapper flex-center-width'>\n            <Projects />\n        </div>\n    )\n}\n\nexport default Work;\n","import React from 'react'\n\nfunction Interests() {\n    return (\n        <div className='section-wrapper flex-center'>\n            <h1>Coming Soon !</h1>\n        </div>\n    )\n}\n\nexport default Interests\n","import React, {useState} from 'react';\nimport './styles/themes.scss';\nimport './styles/styles.scss';\nimport Navbar from './components/NavBar';\nimport Home from './components/Home';\nimport Work from './components/Work';\nimport Interests from './components/Interests';\nimport { getTheme } from './styles/ThemeProvider';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { pathnames } from \"./data/NavBar\"\n// import Footer from './components/Footer'\n\nfunction App() { \n  const [theme, setTheme] = useState(getTheme); // sets the theme\n  return (\n    \n      <Router>\n        <div className={`main-container ${theme} globals`}>\n          <Navbar theme={theme} setTheme={setTheme} />\n          <Switch>\n            <Route path={pathnames.SLASH} component={Home} exact />\n            <Route path={pathnames.WORK} component={Work} />\n            <Route path={pathnames.INTERESTS} component={Interests} />\n          </Switch>\n        </div>\n      </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}