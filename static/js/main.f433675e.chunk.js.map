{"version":3,"sources":["styles/ThemeProvider.ts","components/ThemeToggler.tsx","data/NavBar.ts","data/media/profile.png","components/NavItem.tsx","components/NavBar.tsx","components/Home.tsx","components/Work.tsx","components/Interests.tsx","App.tsx","index.tsx"],"names":["themes","saveTheme","theme","localStorage","setItem","getTheme","getItem","DARK","toggleTheme","setTheme","LIGHT","ThemeToggler","className","onClick","navbar","initials","name","link","home","work","interests","resume","NavItem","animation","to","expanded","shrunk","hide_side_nav","Navbar","useState","navState","setNavState","sideBarState","setSideBarSate","shrink","expand","src","alt","Home","href","url","fgColor","bgColor","Work","Interests","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f433675e.chunk.js","sourcesContent":["/******************\n * Manages Themes\n */\n\n// Available Themes\nenum themes {\n  LIGHT = 'light',\n  DARK = 'dark'\n}\n\n// Saves the current theme to local storage\nconst saveTheme = (theme:string): void => {\n    localStorage.setItem(\"theme\", theme);\n}\n\n// Gets the current theme from local storage\nconst getTheme = (): string => {\n    const theme: string | null = localStorage.getItem(\"theme\");\n    return theme === null ? themes.DARK : theme;\n}   \n\n// Theme Toggler\nconst toggleTheme = (theme: string, setTheme: Function): void => {\n    if(theme === themes.DARK){\n        setTheme(themes.LIGHT);\n        saveTheme(themes.LIGHT);\n    }else{\n        setTheme(themes.DARK)\n        saveTheme(themes.DARK);\n    }\n}\n\nexport {\n    themes,\n    toggleTheme,\n    getTheme\n}","import  React from \"react\"\nimport \"../styles/styles.scss\"\nimport \"../styles/themes.scss\"\nimport {MdBrightness4, MdBrightness5} from 'react-icons/md'\nimport {ThemeInfo} from '../interfaces/NavBar.i'\nimport {toggleTheme, themes} from '../styles/ThemeProvider'\n\n\nfunction ThemeToggler({theme, setTheme}: ThemeInfo){\n    return theme === themes.LIGHT ?  \n    <MdBrightness4 className=\"pointer moon\" onClick={() => toggleTheme(theme, setTheme)} /> : \n    <MdBrightness5 className=\"pointer sun\" onClick={() => toggleTheme(theme, setTheme)} />\n}\n\nexport default ThemeToggler;","import { NavBarInfo } from '../interfaces/NavBar.i'\nimport homepageImage from './media/profile.png'\n\n\nlet navbar: NavBarInfo = {\n    initials : {\n        name:\"BO\",\n        link: homepageImage\n    },\n    home: {\n        name: \"Home\",\n        link: \"/\"\n    },\n    work: {\n        name : \"Work\",\n        link: \"/work\"\n    },\n    interests : {\n        name: \"Interests\",\n        link: \"/interests\"\n    },\n    resume : {\n        name: \"Resume\",\n        link: \"\"\n    }\n    \n}\nexport default navbar;\n\n\n","export default __webpack_public_path__ + \"static/media/profile.bc7d6ff5.png\";","import React from 'react'\nimport { Link }from 'react-router-dom'\nimport '../styles/styles.scss'\n\n// Alternative solution for NavItemInfo\n// TODO: Figure out a way to use the NavItemInfo interface instead.\ninterface NavItemInfoWithAnimation{\n    name: string,\n    link: string,\n    animation: Function\n}\n\n\nfunction NavItem({name, link, animation}: NavItemInfoWithAnimation){\n    return (\n        <Link to={link} onClick={() => animation()} >\n            <div className=\"nav-item\">\n                <div className=\"pointer bottom-border-onhover\">{name}</div>\n            </div>\n        </Link>\n    )\n\n}\n\nexport default NavItem;\n\n","import React, {useState} from 'react'\nimport ThemeToggler from './ThemeToggler'\nimport navbar from '../data/NavBar'\nimport NavItem from './NavItem'\nimport { ThemeInfo } from '../interfaces/NavBar.i'\nimport { FaBars } from  \"react-icons/fa\"\n\nconst expanded = \"navigation-bar-expanded\" // Represents the CSS class containing the animation that expands the navigation bar.\nconst shrunk = \"navigation-bar-shrunk\"     // Represents the CSS class containing the animation that shrinks the navigation bar.\nconst show_side_nav = \"show-side-nav\"      // Represents the CSS class containing the animation that slides the sidebar in from the left.\nconst hide_side_nav = \"hide-side-nav\"      // Represents the CSS class containing the animation that slides the sidebar out to the left.\n  \n\nfunction Navbar({theme, setTheme}: ThemeInfo){\n    const [navState, setNavState] = useState<string>(expanded)               // Controls the state of the navbar on all screens.\n    const [sideBarState, setSideBarSate] = useState<string>(hide_side_nav)   // Controls the state of the sidenav on small screens only.\n   \n    // Changes the state of the navigation bar from expanded to shrunk. \n    const shrink = ():void => {\n        if(navState === shrunk){\n            return;\n        }else{\n            setNavState(shrunk)\n        }\n    }\n\n    // Changes the state of the navigation bar from shrunk to expanded.\n    const expand = ():void => {\n        if(navState === expanded){\n            return\n        }else{\n            setNavState(expanded)\n        }\n    }\n\n    // Toggles the sidebar from visible to invisible and vice versa\n    const toggleSideBar = ():void => {\n        if(sideBarState === hide_side_nav){\n            setSideBarSate(show_side_nav)\n        }else{\n            setSideBarSate(hide_side_nav)\n        }\n    }\n\n    // Renders Benjamin's portrait as an image.\n    const portrait = (link: string) : JSX.Element => {\n        return  <img className=\"portrait\" src={link} alt=\"Benjamin's Portrait\" />\n    }\n\n    // Renders Benjamin's initials\n    const initials = (name: string): JSX.Element =>{\n        return <h2>{name}</h2>\n    }\n\n    return(\n        <div className={`${navState}`}>\n            <div>\n                {navState === expanded && portrait(navbar.initials.link)}\n                {navState === shrunk && initials(navbar.initials.name)}\n            </div>\n            <div className=\"flex-space-between\">\n                <FaBars className=\"humberger pointer\" onClick={toggleSideBar} />\n                <div className={`nav-items ${sideBarState}`}>\n                    <NavItem name={navbar.home.name} link={navbar.home.link} animation={expand} />\n                    <NavItem name={navbar.work.name} link={navbar.work.link} animation={shrink} />\n                    <NavItem name={navbar.interests.name} link={navbar.interests.link} animation={shrink} />\n                    <NavItem name={navbar.resume.name} link={navbar.resume.link} animation={expand} /> \n                </div>\n                <div className=\"theme-toggler\">\n                    <ThemeToggler theme={theme} setTheme={setTheme} />\n                </div>\n            </div> \n        </div>\n    )\n}\n\nexport default Navbar","import React from 'react';\nimport { SocialIcon } from 'react-social-icons';\n\n\n\nfunction Home(): JSX.Element {\n    return (\n        <div className='home-wrapper'>\n            <div className=\"home-about-wrapper flex-center flex-1\">\n                <div className=\"home-about\">\n                    <h1>Benjamin Ombeni</h1>\n                    <h3>Software Enginering Student</h3>\n                    <h3><a className=\"bottom-border-onhover\" href=\"https://www.csusm.edu/\">CSUSM</a> 2022</h3>\n                    <br />\n                    <SocialIcon url=\"https://www.linkedin.com/in/benmob/\" fgColor=\"#ffffff\" className=\"media-icon\"/>\n                    <SocialIcon url=\"https://github.com/BenMob\" bgColor=\"#000000\" fgColor=\"#ffffff\" className=\"media-icon\" />\n                </div>\n            </div>\n            <div className=\"flex-center flex-1\">\n                <small>My Projects - </small>\n                <div className=\"laptop pointer\">&#128187;</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\n\nfunction Work() {\n    return (\n        <div className='section-wrapper flex-center'>\n            <h1>Work</h1>\n        </div>\n    )\n}\n\nexport default Work;\n","import React from 'react'\n\nfunction Interests() {\n    return (\n        <div className='section-wrapper flex-center'>\n            <h1>Interests</h1>\n        </div>\n    )\n}\n\nexport default Interests\n","import React, {useState} from 'react';\nimport './styles/themes.scss';\nimport './styles/styles.scss';\nimport Navbar from './components/NavBar';\nimport Home from './components/Home';\nimport Work from './components/Work';\nimport Interests from './components/Interests';\nimport { getTheme } from './styles/ThemeProvider';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nfunction App() { \n  const [theme, setTheme] = useState(getTheme); // sets the theme\n  return (\n    \n      <Router>\n        <div className={`main-container ${theme} globals`}>\n          <Navbar theme={theme} setTheme={setTheme} />\n          <Switch>\n            <Route path='/' component={Home} exact />\n            <Route path='/work' component={Work} />\n            <Route path='/interests' component={Interests} />\n          </Switch>\n        </div>\n      </Router>\n   \n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}